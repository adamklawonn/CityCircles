= hidden_field_tag :lat
= hidden_field_tag :lng
= hidden_field_tag :interest_point_id, @post.interest_point.id
= hidden_field_tag :post_type_id, @post.post_type.id
= f.label :headline
%br
= f.text_field :headline
= error_message_on :post, :headline
%br
= f.label "Short Headline (40 characters max.)"
%br
= f.text_field :short_headline
= error_message_on :post, :short_headline
%br
- if @post.post_type.shortname == "events"
  = f.label :starts_at
  %br
  = text_field_tag :event_starts_at_date, @event_starts_at_date ||= ''
  = text_field_tag :event_starts_at_time, @event_starts_at_time ||= ''
  = error_message_on :event, :starts_at
  %br
  = f.label :ends_at
  %br
  = text_field_tag :event_ends_at_date, @event_ends_at_date ||= ''
  = text_field_tag :event_ends_at_time, @event_ends_at_time ||= ''
  = error_message_on :event, :ends_at
%br
%br
= f.label :attachments
%br
%br
#post_attachments
  %ul#post_attachments_files
  = link_to_function "Add Attachment", "citycircles.posts.add_attachment_field();", :html => { :style => "font-size: 0.9em;font-color: ;" }
%br
= f.label :body
%br
= f.text_area :body, :class => "wysiwyg"
= error_message_on :post, :body
%br
= f.check_box :certification
I certify that my post is fair, accurate, timely and relevant to this community.
= error_message_on :post, :certification
%br
%br
= link_to "Cancel", interest_point_url( @post.interest_point )
| 
= f.submit "Post"

- if @post.post_type.shortname == "events"
  :javascript      
    
    $j( "#event_starts_at_date" ).datepicker();
    $j( "#event_ends_at_date" ).datepicker();
    
    var currentTime = new Date();
    $j("#event_starts_at_time, #event_ends_at_time").timePicker({
      show24Hours: false,
      separator: ':',
      step: 15}
    );

    // Store time used by duration.
    var oldTime = $j.timePicker("#event_starts_at_time").getTime();

    // Keep the duration between the two inputs.
    $j("#event_starts_at_time").change(function() {
      if ($j("#event_ends_at_time").val()) { // Only update when second input has a value.
        // Calculate duration.
        var duration = ($j.timePicker("#event_ends_at_time").getTime() - oldTime);
        var time = $j.timePicker("#event_starts_at_time").getTime();
        // Calculate and update the time in the second input.
        $j.timePicker("#event_ends_at_time").setTime(new Date(new Date(time.getTime() + duration)));
        oldTime = time;
      }
    });
    // Validate.
    $j("#event_ends_at_time").change(function() {
      if($j.timePicker("#event_starts_at_time").getTime() > $j.timePicker(this).getTime()) {
        $j(this).addClass("error");
      }
      else {
        $j(this).removeClass("error");
      }
    });