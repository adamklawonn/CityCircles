#content.grid_12
  .grid_8#posts.alpha
    #midmap
      #content-spotlight-map
    #post
      #article
      
        %h1
          = @post.headline
        %table{ :width => "100%" }
          %tr
            %td
              %p
                = "By #{ @post.author.login }"
                %br
                = @post.created_at.strftime( "%m/%d/%Y at %I:%M %p" )
            %td{ :align => "right" }
              %p
                = link_to @post.interest_point.label, interest_point_url( @post.interest_point )
                %br
                = "Filed under #{ @post.post_type.name.pluralize }"
        %br
        %p
          = @post.body
          - @post.post_attachments.each do |attach|
            = link_to image_tag( attach.attachment.url( :original ), { :border => 0,:width =>50,:height => 50}), "/system/assets/posts/attachments/"+attach.id.to_s+"/original_"+attach.attachment_file_name+"", :popup => ['new_window_name', 'height=300,width=600']
            %br
            %br
            = link_to "#{attach.attachment_file_name}".gsub!(/\..*/,""), "/system/assets/posts/attachments/"+attach.id.to_s+"/original_"+attach.attachment_file_name+"" 
        - if @post.event != nil
          %br
          %br
          %p
            %table{ :width => "100%" }
              %tr
                %td{ :align => "right" }
                  %p
                    Starts:
                %td{ :align => "center" }
                  %p
                    = @post.event.starts_at.strftime( "%m/%d/%Y at %I:%M %p" )
              %tr
                %td{ :align => "right" }
                  %p
                    Ends:
                %td{ :align => "center" }
                  %p
                    = @post.event.ends_at.strftime( "%m/%d/%Y at %I:%M %p" )
        %br
        %br
        #comments
          - if current_user
            %span
              comment on this
            %br
            %br
            - form_for @comment, :url => commentable_url do |f|
              = render :partial => "citycircles/comment_form", :locals => { :f => f }
          - if !@post.comments.empty?
            - @post.comments.each do |comment|
              .comment
                %strong 
                  = comment.title
                %br
                %br
                  -body1=comment.body.split(' ')
                -len=body1.length
                  -for k in 0..len
                    -if body1[k] =~ /^((?:https?[:]\/\/(?:www\.)?\S+)|(?:(?:https?[:]\/\/)?www\.\S+))/
                    %br
                    = link_to "#{body1[k]}", "#{body1[k]}", :popup => true
                    %br
                    -else
                    = body1[k]
                    
                %br
                %br
                = friendly_datetime comment.created_at
                = "by #{ comment.author.login }"
              .userimage
                = image_tag comment.author.user_detail.avatar.url( :small ), { :border => 0, :width => 50, :height => 50 }
        .clear
          
  .grid_4#storyside.omega
    = render :partial => "citycircles/twitter_feed"
    .clear
    #mostread
      %h1
        most read stories
      .infoblock
        - Post.find( :all, :conditions => [ 'post_type_id = ?', @post.post_type_id ], :limit => 9, :order => "created_at desc" ).each do |post_item|
          %h2.headline
            = link_to truncate( post_item.headline, 39 ), :action => controller.action_name.to_s, :id => post_item.id
      
:javascript

  function loadPostMap() {
    if ( GBrowserIsCompatible() ) {
      
      // Create post icon.
      postIcon = new GIcon();
      postAnchor = new GPoint( #{ @post.post_type.map_icon.icon_anchor } );
      postIcon.image = "#{ @post.post_type.map_icon.image_url }";
      postIcon.iconAnchor = postAnchor;
      postIcon.infoWindowMarker = postAnchor;
      postIcon.iconSize = new GSize( 43, 30 );
      postIcon.shadow = "#{ @post.post_type.map_icon.shadow_url }";
      postIcon.shadowSize = new GSize( 43, 30 );
      
      var postMap = new GMap2( $( "content-spotlight-map" ) );
      postMap.disableDragging();
      postMap.disableDoubleClickZoom();
      postMap.disableScrollWheelZoom();
      var postMarker = new GMarker( new GLatLng( #{ @post.lat }, #{ @post.lng } ), { icon : postIcon } );
      postMap.setCenter( new GLatLng( #{ @post.lat }, #{ @post.lng } ), 17 ); 
      postMap.addOverlay( postMarker );
    }
  }
  
  $j( document ).ready( loadPostMap );
  
