%h2
  New Ad Campaign
%br
- form_for( @ad, :url => { :controller => :organizations, :action => :create_ad_campaign }, :html => { :multipart => true, :target => 'upload_frame' } ) do |f|
  = hidden_field :ad, :organization_id
  = f.label :placement
  %br
  = f.select( :placement, Ad.placement.collect { |p| [ "#{ p[ :placement ] } - Size: #{ p[ :size ] }", p[ :placement ] ] } )
  = error_message_on @ad, :placement
  %br
  = f.label :graphic
  %br
  = f.file_field :graphic
  = error_message_on @ad, :graphic
  %br
  = f.label :starts_at
  %br
  = text_field_tag :ad_starts_at_date, @ad_starts_at_date ||= ''
  = text_field_tag :ad_starts_at_time, @ad_starts_at_time ||= ''
  = error_message_on @ad, :starts_at
  %br
  = f.label :ends_at
  %br
  = text_field_tag :ad_ends_at_date, @ad_ends_at_date ||= ''
  = text_field_tag :ad_ends_at_time, @ad_ends_at_time ||= ''
  = error_message_on @ad, :ends_at
  %br
  = f.submit "Submit for Approval"
  %iframe{ :id => 'upload_frame', :name => 'upload_frame', :style => 'width:1px;height:1px;border:0px', :src => 'about:blank' }

:javascript      
  
  $j( "#ad_starts_at_date" ).datepicker();
  $j( "#ad_ends_at_date" ).datepicker();
  
  var currentTime = new Date();
  $j("#ad_starts_at_time, #ad_ends_at_time").timePicker({
    show24Hours: false,
    separator: ':',
    step: 15}
  );

  // Store time used by duration.
  var oldTime = $j.timePicker("#ad_starts_at_time").getTime();

  // Keep the duration between the two inputs.
  $j("#ad_starts_at_time").change(function() {
    if ($j("#ad_ends_at_time").val()) { // Only update when second input has a value.
      // Calculate duration.
      var duration = ($j.timePicker("#ad_ends_at_time").getTime() - oldTime);
      var time = $j.timePicker("#ad_starts_at_time").getTime();
      // Calculate and update the time in the second input.
      $j.timePicker("#ad_ends_at_time").setTime(new Date(new Date(time.getTime() + duration)));
      oldTime = time;
    }
  });
  // Validate.
  $j("#ad_ends_at_time").change(function() {
    if($j.timePicker("#ad_starts_at_time").getTime() > $j.timePicker(this).getTime()) {
      $j(this).addClass("error");
    }
    else {
      $j(this).removeClass("error");
    }
  });