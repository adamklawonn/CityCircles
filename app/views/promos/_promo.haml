%h3
  New Promo Campaign
%br
- form_for( @promo, :url => { :controller => :organizations, :action => :create_promo_campaign }, :html => { :multipart => true, :target => 'upload_frame' } ) do |form|
  = hidden_field_tag :promo_organization_id, @promo.organization_id
  = form.label :title
  %br
  = form.text_field :title  
  = error_message_on @promo, :title
  %br
  = form.label :starts_at
  %br
  = text_field_tag :promo_starts_at_date, @promo_starts_at_date ||= ''
  = text_field_tag :promo_starts_at_time, @promo_starts_at_time ||= ''
  = error_message_on @promo, :starts_at
  %br
  = form.label :ends_at
  %br
  = text_field_tag :promo_ends_at_date, @promo_ends_at_date ||= ''
  = text_field_tag :promo_ends_at_time, @promo_ends_at_time ||= ''
  = error_message_on @promo, :ends_at
  %br
  = label_tag "Place"
  %br
  = select_tag "place", options_for_select( @interest_points.collect { |poi| [ poi.label, poi.id ] } )
  = observe_field :place, :with => "interest_point_id", :url => { :action => "update_promo_post_map" }
  %br
  %br
  %table{ :width => '100%' }
    %tr
      %td
        %h3 Create a post for this promo
        %br
        - fields_for :post do |post_fields|
          = render :partial => "posts/form", :locals => { :poi => @post.interest_point, :post_type => @post.post_type, :post => @post, :f => post_fields }
      %td
        %h3 Set location
        %br
          #promo_post_map
            = render :partial => "maps/promo_post_map", :locals => { :poi => @post.interest_point }
            = error_message_on :post, :lat
  %br
  = form.submit "Submit for Approval"
  %br
  %iframe{ :id => 'upload_frame', :name => 'upload_frame', :style => 'width:1px;height:1px;border:0px', :src => '' }

:javascript      
  
  $j( "#promo_starts_at_date" ).datepicker();
  $j( "#promo_ends_at_date" ).datepicker();
  
  var currentTime = new Date();
  $j("#promo_starts_at_time, #promo_ends_at_time").timePicker({
    show24Hours: false,
    separator: ':',
    step: 15}
  );

  // Store time used by duration.
  var oldTime = $j.timePicker("#promo_starts_at_time").getTime();

  // Keep the duration between the two inputs.
  $j("#promo_starts_at_time").change(function() {
    if ($j("#promo_ends_at_time").val()) { // Only update when second input has a value.
      // Calculate duration.
      var duration = ($j.timePicker("#promo_ends_at_time").getTime() - oldTime);
      var time = $j.timePicker("#promo_starts_at_time").getTime();
      // Calculate and update the time in the second input.
      $j.timePicker("#promo_ends_at_time").setTime(new Date(new Date(time.getTime() + duration)));
      oldTime = time;
    }
  });
  // Validate.
  $j("#promo_ends_at_time").change(function() {
    if($j.timePicker("#promo_starts_at_time").getTime() > $j.timePicker(this).getTime()) {
      $j(this).addClass("error");
    }
    else {
      $j(this).removeClass("error");
    }
  });